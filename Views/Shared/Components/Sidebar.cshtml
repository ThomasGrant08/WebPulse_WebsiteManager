@using WebPulse_WebManager.Utility
@inject PermissionHelper PermissionHelper
@{
    // Get the current page path
    var currentPagePath = Context.Request.Path;

    var isGodModeOn = await PermissionHelper.IsGodModeOn();
}

<aside class="sidenav navbar navbar-vertical navbar-expand-xs border-0 border-radius-xl my-3 fixed-start ms-3 ps ps--active-y" id="sidenav-main">
    <div class="sidenav-header">
        <i class="fas fa-times p-3 cursor-pointer text-secondary opacity-5 position-absolute end-0 top-0 d-none d-xl-none" aria-hidden="true" id="iconSidenav"></i>
        <a class="navbar-brand m-0" href="/" style="position:relative;">
            <span class="ms-2 font-weight-bold">WebPulse Manager</span>
            @if (isGodModeOn)
            {
                <span class="badge badge-md badge-circle badge-floating badge-danger bg-gradient-info" style="position: absolute; right: 10px; bottom: 5px;">God Mode</span>
            }
        </a>
    </div>
    <hr class="horizontal dark mt-0" />
    <div class="collapse navbar-collapse overflow-auto ps" id="sidenav-collapse-main">
        <ul class="navbar-nav">
            <li class="nav-item">
                @{
                    var dashboardPage = "/";
                }
                <a class="nav-link @(currentPagePath.StartsWithSegments(dashboardPage) ? "active" : "")" href="@Url.ActionLink("Index","Home")">
                    <div class="icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-grid-1x2-fill" viewBox="0 0 16 16">
                            <path class="color-background" d="M0 1a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v14a1 1 0 0 1-1 1H1a1 1 0 0 1-1-1zm9 0a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1zm0 9a1 1 0 0 1 1-1h5a1 1 0 0 1 1 1v5a1 1 0 0 1-1 1h-5a1 1 0 0 1-1-1z" />
                        </svg>
                    </div>
                    <span class="nav-link-text ms-1">Dashboard</span>
                </a>
            </li>
            <li class="nav-item">
                @{
                    var groupsPage = "/Groups";
                }
                <a class="nav-link @(currentPagePath.StartsWithSegments(groupsPage) ? "active" : "")" href="@Url.ActionLink("Index","Groups")">
                    <div class="icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-people-fill" viewBox="0 0 16 16">
                            <path class="color-background" d="M7 14s-1 0-1-1 1-4 5-4 5 3 5 4-1 1-1 1zm4-6a3 3 0 1 0 0-6 3 3 0 0 0 0 6m-5.784 6A2.238 2.238 0 0 1 5 13c0-1.355.68-2.75 1.936-3.72A6.325 6.325 0 0 0 5 9c-4 0-5 3-5 4s1 1 1 1zM4.5 8a2.5 2.5 0 1 0 0-5 2.5 2.5 0 0 0 0 5" />
                        </svg>
                    </div>
                    <span class="nav-link-text ms-1">My Groups</span>
                </a>
            </li>
            <li class="nav-item">
                @{
                    var credentialsPage = "/Credentials";
                }
                <a class="nav-link @(currentPagePath.StartsWithSegments(credentialsPage) ? "active" : "")" href="@Url.ActionLink("Index","Credentials")">
                    <div class="icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" class="bi bi-person-vcard" viewBox="0 0 16 16">
                            <path class="color-background" d="M5 8a2 2 0 1 0 0-4 2 2 0 0 0 0 4m4-2.5a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4a.5.5 0 0 1-.5-.5M9 8a.5.5 0 0 1 .5-.5h4a.5.5 0 0 1 0 1h-4A.5.5 0 0 1 9 8m1 2.5a.5.5 0 0 1 .5-.5h3a.5.5 0 0 1 0 1h-3a.5.5 0 0 1-.5-.5" />
                            <path class="color-background" d="M2 2a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V4a2 2 0 0 0-2-2zM1 4a1 1 0 0 1 1-1h12a1 1 0 0 1 1 1v8a1 1 0 0 1-1 1H8.96c.026-.163.04-.33.04-.5C9 10.567 7.21 9 5 9c-2.086 0-3.8 1.398-3.984 3.181A1.006 1.006 0 0 1 1 12z" />
                        </svg>
                    </div>
                    <span class="nav-link-text ms-1">My Credentials</span>
                </a>
            </li>
            <li class="nav-item">
                @{
                    var websitesPage = "/Websites";
                }
                <a class="nav-link @(currentPagePath.StartsWithSegments(websitesPage) ? "active" : "")" href="@Url.ActionLink("Index","Websites")">
                    <div class="icon icon-shape icon-sm shadow border-radius-md bg-white text-center me-2 d-flex align-items-center justify-content-center">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-code-slash" viewBox="0 0 16 16">
                            <path class="color-background" d="M10.478 1.647a.5.5 0 1 0-.956-.294l-4 13a.5.5 0 0 0 .956.294l4-13zM4.854 4.146a.5.5 0 0 1 0 .708L1.707 8l3.147 3.146a.5.5 0 0 1-.708.708l-3.5-3.5a.5.5 0 0 1 0-.708l3.5-3.5a.5.5 0 0 1 .708 0zm6.292 0a.5.5 0 0 0 0 .708L14.293 8l-3.147 3.146a.5.5 0 0 0 .708.708l3.5-3.5a.5.5 0 0 0 0-.708l-3.5-3.5a.5.5 0 0 0-.708 0z" />
                        </svg>
                    </div>
                    <span class="nav-link-text ms-1">My Websites</span>
                </a>
            </li>
        </ul>
    </div>
    @if (await PermissionHelper.IsUserGlobalAdminOrOwnerAsync())
    {
        <div class="sidenav-footer mx-3">
            <div class="card card-background shadow-none card-background-mask-secondary" id="sidenavCard">
                <div class="full-background">
                </div>
                <div class="card-body text-start p-3 w-100">
                    <div class="form-check form-switch">
                        <input class="form-check-input" type="checkbox" role="switch" id="flexSwitchCheckDefault" @(isGodModeOn ? "checked" : "")>
                        <label class="form-check-label" for="flexSwitchCheckDefault">God Mode</label>
                    </div>
                </div>
            </div>
        </div>
    }
</aside>
